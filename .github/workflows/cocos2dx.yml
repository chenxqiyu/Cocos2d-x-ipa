name: Build Cocos2d-x 4.0 lua-tests iOS IPA

on:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH 连接至 Actions'
        required: false
        default: 'false'

jobs:
  build:
    runs-on: macos-13
    #/Users/runner/work/Cocos2d-x-ipa/Cocos2d-x-ipa
    steps:
      - name: Download
        run: |
          #curl -L https://digitalocean.cocos2d-x.org/Cocos2D-X/cocos2d-x-4.0.zip -o cocos2d-x-4.0.zip
          #unzip cocos2d-x-4.0.zip
          git clone https://github.com/axmolengine/axmol.git
          

      - name: Initialize submodules manually
        run: |
          #cd cocos2d-x-4.0
          cd axmol
          brew install powershell
          brew install ldid
          powershell setup.ps1 || true
          #source ~/.bash_profile || true
          ls -la

      - name: Check Python version0000
        run: |
            which python
            python --version

      # - name: Set environment variables manually
      #   run: |
      #     echo "COCOS_CONSOLE_ROOT=${{ github.workspace }}/cocos2d-x-4.0/tools/cocos2d-console/bin" >> $GITHUB_ENV
      #     echo "COCOS_X_ROOT=${{ github.workspace }}/cocos2d-x-4.0" >> $GITHUB_ENV
      #     echo "PATH=${{ github.workspace }}/cocos2d-x-4.0/tools/cocos2d-console/bin:$PATH" >> $GITHUB_ENV

      # - name: Install Python 2.7 via homebrew
      #   run: |
      #       brew install pyenv
      #       pyenv install 2.7.18
      #       pyenv global 2.7.18
      #       echo "PYENV_ROOT=$HOME/.pyenv" >> $GITHUB_ENV
      #       echo "$HOME/.pyenv/bin" >> $GITHUB_PATH
      #       echo "$HOME/.pyenv/shims" >> $GITHUB_PATH

      - name: Check Python version
        run: |
            which python
            python --version

      - name: SSH connection to Actions
        uses: P3TERX/ssh2actions@v1.0.0
        if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
        env:
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

      #cmake ../.. -GXcode· -DCMAKE_SYSTEM_NAME=iOS -DCMAKE_OSX_SYSROOT=iphoneos
      #Xcode 15.2
      #xcodebuild -version
      # grep -rn "IPHONEOS_DEPLOYMENT_TARGET" project.pbxproj
      #sed -i '' 's/IPHONEOS_DEPLOYMENT_TARGET = 8.0;/IPHONEOS_DEPLOYMENT_TARGET = 12.0;/g' project.pbxproj
      #curl -F "file=@HelloLua.ipa" https://temp.sh/upload

      #https://github.com/axmolengine/axmol/blob/dev/docs/DevSetup.md#creating-a-new-project
      #axmol new -p dev.axmol.hellocpp -d D:\dev\projects\ -l cpp --portrait HelloCpp
      #axmol new -p dev.chenx.hellolua -d lua-tests -l lua --portrait lua-tests
      #axmol build -p ios -a arm64 -c

      #https://developer.apple.com/documentation/xcode-release-notes/xcode-15_2-release-notes
      - name: Build lua-tests Xcode project
        run: |
          #手动操作
          #source ~/.bash_profile || true
          axmol new -p dev.chenx.hellolua -d lua-tests -l lua --portrait lua-tests
          cd lua-tests\lua-tests
          axmol build -p ios -a arm64 -c

          xcodebuild \
            -project lua-tests.xcodeproj \
            -scheme lua-tests \
            -configuration Release \
            -sdk iphoneos \
            -archivePath ${{ github.workspace }}/build/lua-tests.xcarchive \
            archive CODE_SIGNING_ALLOWED=NO


           xcodebuild \
              -project lua-tests.xcodeproj \
              -scheme lua-tests \
              -configuration Debug \
              -sdk iphoneos \
              build \
              CODE_SIGNING_ALLOWED=NO \
              CODE_SIGNING_REQUIRED=NO


      # - name: Prepare exportOptions.plist
      #   run: |
      #     cat > exportOptions.plist <<EOL
      #     <?xml version="1.0" encoding="UTF-8"?>
      #     <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN"
      #      "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
      #     <plist version="1.0">
      #     <dict>
      #       <key>method</key>
      #       <string>ad-hoc</string>
      #       <key>signingStyle</key>
      #       <string>manual</string>
      #       <key>compileBitcode</key>
      #       <false/>
      #       <key>stripSwiftSymbols</key>
      #       <true/>
      #       <key>signingCertificate</key>
      #       <string></string>
      #       <key>provisioningProfiles</key>
      #       <dict/>
      #     </dict>
      #     </plist>
      #     EOL

      # - name: Export IPA
      #   run: |
      #     xcodebuild -exportArchive \
      #       -archivePath ${{ github.workspace }}/build/lua-tests.xcarchive \    
      #       -exportOptionsPlist exportOptions.plist \
      #       -exportPath ${{ github.workspace }}/build/ipa \
      #       CODE_SIGNING_ALLOWED=NO


      - name: Upload IPA artifact
        uses: actions/upload-artifact@v4
        with:
          name: lua-tests-ipa
          path: build/ipa/*.ipa
